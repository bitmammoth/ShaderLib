[gd_scene load_steps=48 format=2]

[ext_resource path="res://shaders/Glitch/ghost-5129812_1280.jpg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=1]

[sub_resource type="VisualShaderNodeExpression" id=2]
size = Vector2( 250, 150 )
expression = "From https://www.youtube.com/watch?v=Tt07sfAVj7E&ab_channel=BoundfoxStudios-Tutorialshttps://www.youtube.com/watch?v=Tt07sfAVj7E&ab_channel=BoundfoxStudios-Tutorials"

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, -10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=8]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.5 ]

[sub_resource type="OpenSimplexNoise" id=9]
seed = 63
octaves = 5
period = 65.3
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=10]
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeScalarOp" id=12]

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "offsetY"

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "offsetX"

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeScalarUniform" id=17]
uniform_name = "impulse_variation"

[sub_resource type="VisualShaderNodeScalarUniform" id=18]
uniform_name = "vertical_glitch_speed"

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 19

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=23]
uniform_name = "sine_speed"

[sub_resource type="VisualShaderNodeScalarOp" id=24]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "Sine_scale"

[sub_resource type="VisualShaderNodeScalarFunc" id=27]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeScalarUniform" id=29]
uniform_name = "Brightness"

[sub_resource type="VisualShaderNodeVectorDecompose" id=30]

[sub_resource type="VisualShaderNodeScalarOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=32]
output_port_for_preview = 0
operator = 2

[sub_resource type="OpenSimplexNoise" id=33]
period = 256.0

[sub_resource type="NoiseTexture" id=34]
width = 200
height = 200
noise = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="VisualShaderNodeVectorOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "time"

[sub_resource type="VisualShader" id=38]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float offsetX;
uniform float offsetY;
uniform float vertical_glitch_speed;
uniform sampler2D tex_frg_2;
uniform float impulse_variation;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_12;
uniform float sine_speed;
uniform float Sine_scale;
uniform float Brightness;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:23
	float n_out23p0 = offsetX;

// ScalarUniform:22
	float n_out22p0 = offsetY;

// VectorCompose:25
	float n_in25p2 = 0.00000;
	vec3 n_out25p0 = vec3(n_out23p0, n_out22p0, n_in25p2);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// Input:9
	float n_out9p0 = TIME;

// ScalarUniform:28
	float n_out28p0 = vertical_glitch_speed;

// ScalarOp:29
	float n_in29p1 = 10.00000;
	float n_out29p0 = n_out28p0 / n_in29p1;

// ScalarOp:14
	float n_out14p0 = n_out9p0 * n_out29p0;

// ScalarFunc:30
	float n_out30p0 = -(n_out14p0);

// ScalarOp:21
	float n_out21p0 = n_out30p0 + n_out4p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, vec3(n_out21p0).xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:26
	float n_out26p0 = impulse_variation;

// ScalarSmoothStep:19
	float n_in19p1 = 1.00000;
	float n_out19p0 = smoothstep(dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)), n_in19p1, n_out26p0);

// Input:15
	float n_out15p0 = TIME;

// ScalarOp:16
	float n_in16p1 = 4.00000;
	float n_out16p0 = n_out15p0 * n_in16p1;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, vec3(n_out16p0).xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorOp:7
	vec3 n_out7p0 = vec3(n_out19p0) * n_out5p0;

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out4p0) + n_out7p0;

// VectorCompose:13
	float n_in13p2 = 0.00000;
	vec3 n_out13p0 = vec3(dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333)), n_out4p1, n_in13p2);

// VectorOp:24
	vec3 n_out24p0 = n_out25p0 + n_out13p0;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, n_out24p0.xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// ScalarUniform:33
	float n_out33p0 = sine_speed;

// ScalarOp:32
	float n_out32p0 = n_out15p0 * n_out33p0;

// ScalarOp:34
	float n_out34p0 = n_out4p1 + n_out32p0;

// ScalarUniform:36
	float n_out36p0 = Sine_scale;

// ScalarOp:35
	float n_out35p0 = n_out34p0 * n_out36p0;

// ScalarFunc:37
	float n_out37p0 = sin(n_out35p0);

// ScalarFunc:38
	float n_out38p0 = min(max(n_out37p0, 0.0), 1.0);

// ScalarUniform:39
	float n_out39p0 = Brightness;

// ScalarOp:40
	float n_out40p0 = n_out38p0 * n_out39p0;

// VectorOp:41
	vec3 n_out41p0 = n_out12p0 * vec3(n_out40p0);

// Output:0
	ALBEDO = n_out41p0;
	AO_LIGHT_AFFECT = n_out37p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 448, -205 )
nodes/fragment/0/position = Vector2( 1480, 20 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -560, -300 )
nodes/fragment/3/node = SubResource( 20 )
nodes/fragment/3/position = Vector2( -1220, -40 )
nodes/fragment/4/node = SubResource( 30 )
nodes/fragment/4/position = Vector2( -1000, 60 )
nodes/fragment/5/node = SubResource( 35 )
nodes/fragment/5/position = Vector2( -560, 60 )
nodes/fragment/7/node = SubResource( 36 )
nodes/fragment/7/position = Vector2( -100, -40 )
nodes/fragment/9/node = SubResource( 37 )
nodes/fragment/9/position = Vector2( -1440, -180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 120, -180 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 780, -540 )
nodes/fragment/11/size = Vector2( 250, 150 )
nodes/fragment/11/input_ports = ""
nodes/fragment/11/output_ports = ""
nodes/fragment/11/expression = "From https://www.youtube.com/watch?v=Tt07sfAVj7E&ab_channel=BoundfoxStudios-Tutorialshttps://www.youtube.com/watch?v=Tt07sfAVj7E&ab_channel=BoundfoxStudios-Tutorials"
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 780, -180 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 320, 40 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1240, -200 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -920, 480 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -780, 240 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( -340, -160 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -780, -200 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 100, -300 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -120, -300 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( 600, -80 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( 360, -160 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( -560, -40 )
nodes/fragment/28/node = SubResource( 18 )
nodes/fragment/28/position = Vector2( -1620, -60 )
nodes/fragment/29/node = SubResource( 19 )
nodes/fragment/29/position = Vector2( -1420, -80 )
nodes/fragment/30/node = SubResource( 21 )
nodes/fragment/30/position = Vector2( -1020, -180 )
nodes/fragment/32/node = SubResource( 22 )
nodes/fragment/32/position = Vector2( -580, 520 )
nodes/fragment/33/node = SubResource( 23 )
nodes/fragment/33/position = Vector2( -920, 600 )
nodes/fragment/34/node = SubResource( 24 )
nodes/fragment/34/position = Vector2( -260, 580 )
nodes/fragment/35/node = SubResource( 25 )
nodes/fragment/35/position = Vector2( 0, 600 )
nodes/fragment/36/node = SubResource( 26 )
nodes/fragment/36/position = Vector2( -220, 720 )
nodes/fragment/37/node = SubResource( 27 )
nodes/fragment/37/position = Vector2( 280, 540 )
nodes/fragment/38/node = SubResource( 28 )
nodes/fragment/38/position = Vector2( 500, 340 )
nodes/fragment/39/node = SubResource( 29 )
nodes/fragment/39/position = Vector2( 760, 460 )
nodes/fragment/40/node = SubResource( 31 )
nodes/fragment/40/position = Vector2( 922, 310.25 )
nodes/fragment/41/node = SubResource( 32 )
nodes/fragment/41/position = Vector2( 1144, 46.25 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 5, 0, 7, 1, 9, 0, 14, 0, 15, 0, 16, 0, 16, 0, 5, 0, 2, 0, 19, 0, 19, 0, 7, 0, 21, 0, 2, 0, 13, 0, 24, 1, 24, 0, 12, 0, 23, 0, 25, 0, 22, 0, 25, 1, 25, 0, 24, 0, 26, 0, 19, 2, 28, 0, 29, 0, 29, 0, 14, 1, 14, 0, 30, 0, 32, 0, 34, 1, 4, 1, 34, 0, 15, 0, 32, 0, 34, 0, 35, 0, 35, 0, 37, 0, 33, 0, 32, 1, 36, 0, 35, 1, 37, 0, 0, 19, 37, 0, 38, 0, 38, 0, 40, 0, 39, 0, 40, 1, 30, 0, 21, 0, 4, 1, 21, 1, 4, 0, 10, 0, 7, 0, 10, 1, 4, 1, 13, 1, 10, 0, 13, 0, 12, 0, 41, 0, 40, 0, 41, 1, 41, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=39]
shader = SubResource( 38 )
shader_param/offsetX = 0.993
shader_param/offsetY = 0.032
shader_param/vertical_glitch_speed = 1.809
shader_param/impulse_variation = 0.577
shader_param/sine_speed = 0.924
shader_param/Sine_scale = 600.0
shader_param/Brightness = 0.488

[sub_resource type="SphereMesh" id=40]
material = SubResource( 39 )
radius = 6.0
height = 12.0

[sub_resource type="SpatialMaterial" id=41]
albedo_color = Color( 0.329412, 0.160784, 0, 1 )

[sub_resource type="CubeMesh" id=42]
material = SubResource( 41 )
size = Vector3( 5, 5, 5 )

[sub_resource type="CubeMesh" id=43]
size = Vector3( 4, 4, 4 )

[sub_resource type="VisualShader" id=44]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float offsetX;
uniform float offsetY;
uniform float vertical_glitch_speed;
uniform sampler2D tex_frg_2;
uniform float impulse_variation;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_12;
uniform float sine_speed;
uniform float Sine_scale;
uniform float Brightness;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:23
	float n_out23p0 = offsetX;

// ScalarUniform:22
	float n_out22p0 = offsetY;

// VectorCompose:25
	float n_in25p2 = 0.00000;
	vec3 n_out25p0 = vec3(n_out23p0, n_out22p0, n_in25p2);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// Input:9
	float n_out9p0 = TIME;

// ScalarUniform:28
	float n_out28p0 = vertical_glitch_speed;

// ScalarOp:29
	float n_in29p1 = 10.00000;
	float n_out29p0 = n_out28p0 / n_in29p1;

// ScalarOp:14
	float n_out14p0 = n_out9p0 * n_out29p0;

// ScalarFunc:30
	float n_out30p0 = -(n_out14p0);

// ScalarOp:21
	float n_out21p0 = n_out30p0 + n_out4p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, vec3(n_out21p0).xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:26
	float n_out26p0 = impulse_variation;

// ScalarSmoothStep:19
	float n_in19p1 = 1.00000;
	float n_out19p0 = smoothstep(dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)), n_in19p1, n_out26p0);

// Input:15
	float n_out15p0 = TIME;

// ScalarOp:16
	float n_in16p1 = 4.00000;
	float n_out16p0 = n_out15p0 * n_in16p1;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, vec3(n_out16p0).xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorOp:7
	vec3 n_out7p0 = vec3(n_out19p0) * n_out5p0;

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out4p0) + n_out7p0;

// VectorCompose:13
	float n_in13p2 = 0.00000;
	vec3 n_out13p0 = vec3(dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333)), n_out4p1, n_in13p2);

// VectorOp:24
	vec3 n_out24p0 = n_out25p0 + n_out13p0;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, n_out24p0.xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// ScalarUniform:33
	float n_out33p0 = sine_speed;

// ScalarOp:32
	float n_out32p0 = n_out15p0 * n_out33p0;

// ScalarOp:34
	float n_out34p0 = n_out4p1 + n_out32p0;

// ScalarUniform:36
	float n_out36p0 = Sine_scale;

// ScalarOp:35
	float n_out35p0 = n_out34p0 * n_out36p0;

// ScalarFunc:37
	float n_out37p0 = sin(n_out35p0);

// ScalarFunc:38
	float n_out38p0 = min(max(n_out37p0, 0.0), 1.0);

// ScalarUniform:39
	float n_out39p0 = Brightness;

// ScalarOp:40
	float n_out40p0 = n_out38p0 * n_out39p0;

// VectorOp:41
	vec3 n_out41p0 = n_out12p0 * vec3(n_out40p0);

// Output:0
	ALBEDO = n_out41p0;
	AO_LIGHT_AFFECT = n_out37p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 448, -205 )
nodes/fragment/0/position = Vector2( 1480, 20 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -560, -300 )
nodes/fragment/3/node = SubResource( 20 )
nodes/fragment/3/position = Vector2( -1220, -40 )
nodes/fragment/4/node = SubResource( 30 )
nodes/fragment/4/position = Vector2( -1000, 60 )
nodes/fragment/5/node = SubResource( 35 )
nodes/fragment/5/position = Vector2( -560, 60 )
nodes/fragment/7/node = SubResource( 36 )
nodes/fragment/7/position = Vector2( -100, -40 )
nodes/fragment/9/node = SubResource( 37 )
nodes/fragment/9/position = Vector2( -1440, -180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 120, -180 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 780, -540 )
nodes/fragment/11/size = Vector2( 250, 150 )
nodes/fragment/11/input_ports = ""
nodes/fragment/11/output_ports = ""
nodes/fragment/11/expression = "From https://www.youtube.com/watch?v=Tt07sfAVj7E&ab_channel=BoundfoxStudios-Tutorialshttps://www.youtube.com/watch?v=Tt07sfAVj7E&ab_channel=BoundfoxStudios-Tutorials"
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 780, -180 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 320, 40 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1240, -200 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -920, 480 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -780, 240 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( -340, -160 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -780, -200 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 100, -300 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -120, -300 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( 600, -80 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( 360, -160 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( -560, -40 )
nodes/fragment/28/node = SubResource( 18 )
nodes/fragment/28/position = Vector2( -1620, -60 )
nodes/fragment/29/node = SubResource( 19 )
nodes/fragment/29/position = Vector2( -1420, -80 )
nodes/fragment/30/node = SubResource( 21 )
nodes/fragment/30/position = Vector2( -1020, -180 )
nodes/fragment/32/node = SubResource( 22 )
nodes/fragment/32/position = Vector2( -580, 520 )
nodes/fragment/33/node = SubResource( 23 )
nodes/fragment/33/position = Vector2( -920, 600 )
nodes/fragment/34/node = SubResource( 24 )
nodes/fragment/34/position = Vector2( -260, 580 )
nodes/fragment/35/node = SubResource( 25 )
nodes/fragment/35/position = Vector2( 0, 600 )
nodes/fragment/36/node = SubResource( 26 )
nodes/fragment/36/position = Vector2( -220, 720 )
nodes/fragment/37/node = SubResource( 27 )
nodes/fragment/37/position = Vector2( 280, 540 )
nodes/fragment/38/node = SubResource( 28 )
nodes/fragment/38/position = Vector2( 500, 340 )
nodes/fragment/39/node = SubResource( 29 )
nodes/fragment/39/position = Vector2( 760, 460 )
nodes/fragment/40/node = SubResource( 31 )
nodes/fragment/40/position = Vector2( 922, 310.25 )
nodes/fragment/41/node = SubResource( 32 )
nodes/fragment/41/position = Vector2( 1144, 46.25 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 5, 0, 7, 1, 9, 0, 14, 0, 15, 0, 16, 0, 16, 0, 5, 0, 2, 0, 19, 0, 19, 0, 7, 0, 21, 0, 2, 0, 13, 0, 24, 1, 24, 0, 12, 0, 23, 0, 25, 0, 22, 0, 25, 1, 25, 0, 24, 0, 26, 0, 19, 2, 28, 0, 29, 0, 29, 0, 14, 1, 14, 0, 30, 0, 32, 0, 34, 1, 4, 1, 34, 0, 15, 0, 32, 0, 34, 0, 35, 0, 35, 0, 37, 0, 33, 0, 32, 1, 36, 0, 35, 1, 37, 0, 0, 19, 37, 0, 38, 0, 38, 0, 40, 0, 39, 0, 40, 1, 30, 0, 21, 0, 4, 1, 21, 1, 4, 0, 10, 0, 7, 0, 10, 1, 4, 1, 13, 1, 10, 0, 13, 0, 12, 0, 41, 0, 40, 0, 41, 1, 41, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=45]
shader = SubResource( 44 )
shader_param/offsetX = 0.314
shader_param/offsetY = 0.185
shader_param/vertical_glitch_speed = 2.0
shader_param/impulse_variation = 0.55
shader_param/sine_speed = 0.5
shader_param/Sine_scale = 300.0
shader_param/Brightness = 0.256

[sub_resource type="CubeMesh" id=46]
material = SubResource( 45 )
size = Vector3( 4, 4, 5 )

[node name="Glitch" type="Spatial"]

[node name="Sphere" type="MeshInstance" parent="."]
transform = Transform( -0.997882, 0, -0.065055, 0, 1, 0, 0.065055, 0, -0.997882, 0, 0, 0 )
mesh = SubResource( 40 )
material/0 = null
__meta__ = {
"_editor_description_": ""
}

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.998823, -0.00683609, 0.048016, -0.0116249, 0.927414, 0.373857, -0.0470864, -0.373975, 0.926243, 0.594071, 4.13696, 11.4944 )
current = true
__meta__ = {
"_editor_description_": ""
}

[node name="TV" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 29.501, 0, 0 )

[node name="Shell" type="CSGMesh" parent="TV"]
mesh = SubResource( 42 )

[node name="Inside" type="CSGMesh" parent="TV/Shell"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.8 )
operation = 2
mesh = SubResource( 43 )

[node name="Screen" type="MeshInstance" parent="TV/Shell"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0139084, -2.38419e-07, 0.0294251 )
mesh = SubResource( 46 )
material/0 = null
