[gd_resource type="VisualShader" load_steps=16 format=2]

[ext_resource path="res://shaders/atmosphere/planet/8k_earth_daymap.jpg" type="Texture" id=1]
[ext_resource path="res://shaders/atmosphere/planet/8k_earth_nightmap.jpg" type="Texture" id=2]
[ext_resource path="res://shaders/atmosphere/planet/8k_earth_clouds.jpg" type="Texture" id=3]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 400.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.35, 0, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=10]
default_input_values = [ 0, Vector3( 0.3, 0.3, 0.3 ), 1, Vector3( 0.2, 0.2, 0.2 ) ]
operator = 11

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=12]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_8;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Input:11
	float n_out11p0 = TIME;

// ScalarOp:14
	float n_in14p1 = 400.00000;
	float n_out14p0 = n_out11p0 / n_in14p1;

// VectorCompose:12
	float n_in12p1 = 0.00000;
	float n_in12p2 = 0.00000;
	vec3 n_out12p0 = vec3(n_out14p0, n_in12p1, n_in12p2);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:13
	vec3 n_out13p0 = n_out12p0 + n_out3p0;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, n_out13p0.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// VectorOp:4
	vec3 n_in4p1 = vec3(1.35000, 0.00000, 0.00000);
	vec3 n_out4p0 = n_out3p0 + n_in4p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out4p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// VectorOp:9
	vec3 n_out9p0 = n_out8p0 + n_out2p0;

// VectorOp:16
	vec3 n_in16p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out16p0 = n_out9p0 / n_in16p1;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out4p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorOp:7
	vec3 n_in7p0 = vec3(0.30000, 0.30000, 0.30000);
	vec3 n_out7p0 = step(n_in7p0, n_out5p0);

// Output:0
	ALBEDO = n_out16p0;
	EMISSION = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -161, -178.75 )
nodes/fragment/0/position = Vector2( 680, 80 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -60, -20 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( -500, 160 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -280, 180 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( 100, 200 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( 340, 200 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( -60, -280 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 280, 60 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -880, -80 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -500, -180 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -260, -180 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -680, -180 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( 480, 60 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 2, 0, 4, 0, 5, 0, 5, 0, 7, 1, 7, 0, 0, 5, 13, 0, 8, 0, 11, 0, 14, 0, 14, 0, 12, 0, 2, 0, 9, 1, 8, 0, 9, 0, 16, 0, 0, 0, 9, 0, 16, 0, 12, 0, 13, 0, 3, 0, 13, 1 )
