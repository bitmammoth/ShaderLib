[gd_resource type="VisualShader" load_steps=36 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 20.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=5]

[sub_resource type="VisualShaderNodeFresnel" id=6]

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Darker"

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeVectorOp" id=12]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="OpenSimplexNoise" id=13]
seed = 10
octaves = 5

[sub_resource type="NoiseTexture" id=14]
seamless = true
noise = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = SubResource( 14 )

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[sub_resource type="VisualShaderNodeVectorCompose" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=22]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=23]
uniform_name = "Galaxy_background"

[sub_resource type="VisualShaderNodeTextureUniform" id=24]
uniform_name = "Galaxy_foreground"

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "fresnel_tint_slowness"

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "foreground_slowness"

[sub_resource type="VisualShaderNodeScalarOp" id=27]
default_input_values = [ 0, 0.0, 1, 0.001 ]

[sub_resource type="VisualShaderNodeScalarOp" id=28]
default_input_values = [ 0, 0.0, 1, 0.001 ]

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "Foreground_size"

[sub_resource type="VisualShaderNodeScalarUniform" id=31]
uniform_name = "Background_size"

[sub_resource type="VisualShaderNodeScalarOp" id=32]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=33]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=34]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=35]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Background_size;
uniform sampler2D Galaxy_background;
uniform float foreground_slowness;
uniform float Foreground_size;
uniform sampler2D Galaxy_foreground;
uniform float Darker;
uniform vec4 ColorUniform : hint_color;
uniform float fresnel_tint_slowness;
uniform sampler2D tex_frg_23;



void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(SCREEN_UV, 0.0);

// ScalarUniform:39
	float n_out39p0 = Background_size;

// ScalarOp:40
	float n_in40p1 = 1.00000;
	float n_out40p0 = n_out39p0 + n_in40p1;

// VectorOp:41
	vec3 n_out41p0 = n_out6p0 * vec3(n_out40p0);

// TextureUniform:31
	vec3 n_out31p0;
	float n_out31p1;
	{
		vec4 n_tex_read = texture(Galaxy_background, n_out41p0.xy);
		n_out31p0 = n_tex_read.rgb;
		n_out31p1 = n_tex_read.a;
	}

// VectorDecompose:11
	float n_out11p0 = n_out6p0.x;
	float n_out11p1 = n_out6p0.y;
	float n_out11p2 = n_out6p0.z;

// Input:10
	float n_out10p0 = TIME;

// ScalarUniform:34
	float n_out34p0 = foreground_slowness;

// ScalarOp:35
	float n_in35p1 = 0.00100;
	float n_out35p0 = n_out34p0 + n_in35p1;

// ScalarOp:13
	float n_out13p0 = n_out10p0 / n_out35p0;

// ScalarOp:14
	float n_out14p0 = n_out11p1 + n_out13p0;

// VectorCompose:12
	vec3 n_out12p0 = vec3(n_out11p0, n_out14p0, n_out11p2);

// ScalarUniform:38
	float n_out38p0 = Foreground_size;

// ScalarOp:37
	float n_in37p1 = 1.00000;
	float n_out37p0 = n_out38p0 + n_in37p1;

// VectorOp:22
	vec3 n_out22p0 = n_out12p0 * vec3(n_out37p0);

// TextureUniform:32
	vec3 n_out32p0;
	float n_out32p1;
	{
		vec4 n_tex_read = texture(Galaxy_foreground, n_out22p0.xy);
		n_out32p0 = n_tex_read.rgb;
		n_out32p1 = n_tex_read.a;
	}

// VectorOp:9
	vec3 n_out9p0 = n_out31p0 + n_out32p0;

// ScalarUniform:20
	float n_out20p0 = Darker;

// VectorOp:18
	vec3 n_out18p0 = n_out9p0 - vec3(n_out20p0);

// Fresnel:15
	bool n_in15p2 = false;
	float n_in15p3 = 1.00000;
	float n_out15p0 = n_in15p2 ? (pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in15p3)) : (pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in15p3));

// ColorUniform:16
	vec3 n_out16p0 = ColorUniform.rgb;
	float n_out16p1 = ColorUniform.a;

// VectorOp:17
	vec3 n_out17p0 = vec3(n_out15p0) * n_out16p0;

// Input:29
	vec3 n_out29p0 = vec3(UV, 0.0);

// VectorDecompose:25
	float n_out25p0 = n_out29p0.x;
	float n_out25p1 = n_out29p0.y;
	float n_out25p2 = n_out29p0.z;

// Input:24
	float n_out24p0 = TIME;

// ScalarUniform:33
	float n_out33p0 = fresnel_tint_slowness;

// ScalarOp:36
	float n_in36p1 = 0.00100;
	float n_out36p0 = n_out33p0 + n_in36p1;

// ScalarOp:27
	float n_out27p0 = n_out24p0 / n_out36p0;

// ScalarOp:28
	float n_out28p0 = n_out25p1 + n_out27p0;

// VectorCompose:26
	vec3 n_out26p0 = vec3(n_out25p0, n_out28p0, n_out25p2);

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, n_out26p0.xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// VectorOp:30
	vec3 n_out30p0 = n_out17p0 * n_out23p0;

// VectorOp:21
	vec3 n_out21p0 = n_out18p0 + n_out30p0;

// Output:0
	ALBEDO = n_out21p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1189.36, 261.917 )
nodes/fragment/0/position = Vector2( 580, 140 )
nodes/fragment/6/node = SubResource( 34 )
nodes/fragment/6/position = Vector2( -1260, -100 )
nodes/fragment/9/node = SubResource( 35 )
nodes/fragment/9/position = Vector2( -60, 120 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1160, 240 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -940, 80 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -540, 80 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -920, 220 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -720, 200 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -720, 340 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -440, 400 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -120, 320 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 140, 120 )
nodes/fragment/20/node = SubResource( 10 )
nodes/fragment/20/position = Vector2( -80, 20 )
nodes/fragment/21/node = SubResource( 11 )
nodes/fragment/21/position = Vector2( 340, 120 )
nodes/fragment/22/node = SubResource( 12 )
nodes/fragment/22/position = Vector2( -520, 200 )
nodes/fragment/23/node = SubResource( 15 )
nodes/fragment/23/position = Vector2( -140, 440 )
nodes/fragment/24/node = SubResource( 16 )
nodes/fragment/24/position = Vector2( -980, 640 )
nodes/fragment/25/node = SubResource( 17 )
nodes/fragment/25/position = Vector2( -680, 520 )
nodes/fragment/26/node = SubResource( 18 )
nodes/fragment/26/position = Vector2( -400, 520 )
nodes/fragment/27/node = SubResource( 19 )
nodes/fragment/27/position = Vector2( -800, 620 )
nodes/fragment/28/node = SubResource( 20 )
nodes/fragment/28/position = Vector2( -580, 640 )
nodes/fragment/29/node = SubResource( 21 )
nodes/fragment/29/position = Vector2( -860, 540 )
nodes/fragment/30/node = SubResource( 22 )
nodes/fragment/30/position = Vector2( 80, 320 )
nodes/fragment/31/node = SubResource( 23 )
nodes/fragment/31/position = Vector2( -300, -60 )
nodes/fragment/32/node = SubResource( 24 )
nodes/fragment/32/position = Vector2( -300, 140 )
nodes/fragment/33/node = SubResource( 25 )
nodes/fragment/33/position = Vector2( -1300, 780 )
nodes/fragment/34/node = SubResource( 26 )
nodes/fragment/34/position = Vector2( -1440, 360 )
nodes/fragment/35/node = SubResource( 27 )
nodes/fragment/35/position = Vector2( -1120, 320 )
nodes/fragment/36/node = SubResource( 28 )
nodes/fragment/36/position = Vector2( -1040, 760 )
nodes/fragment/37/node = SubResource( 29 )
nodes/fragment/37/position = Vector2( -920, 400 )
nodes/fragment/38/node = SubResource( 30 )
nodes/fragment/38/position = Vector2( -1160, 480 )
nodes/fragment/39/node = SubResource( 31 )
nodes/fragment/39/position = Vector2( -940, -40 )
nodes/fragment/40/node = SubResource( 32 )
nodes/fragment/40/position = Vector2( -700, -80 )
nodes/fragment/41/node = SubResource( 33 )
nodes/fragment/41/position = Vector2( -520, -200 )
nodes/fragment/connections = PoolIntArray( 6, 0, 11, 0, 11, 0, 12, 0, 10, 0, 13, 0, 11, 1, 14, 0, 13, 0, 14, 1, 14, 0, 12, 1, 16, 0, 17, 1, 15, 0, 17, 0, 9, 0, 18, 0, 20, 0, 18, 1, 18, 0, 21, 0, 21, 0, 0, 0, 12, 0, 22, 0, 11, 2, 12, 2, 24, 0, 27, 0, 17, 0, 30, 0, 23, 0, 30, 1, 30, 0, 21, 1, 27, 0, 28, 1, 28, 0, 26, 1, 29, 0, 25, 0, 25, 2, 26, 2, 25, 0, 26, 0, 25, 1, 28, 0, 31, 0, 9, 0, 22, 0, 32, 0, 32, 0, 9, 1, 34, 0, 35, 0, 35, 0, 13, 1, 33, 0, 36, 0, 36, 0, 27, 1, 38, 0, 37, 0, 37, 0, 22, 1, 39, 0, 40, 0, 40, 0, 41, 1, 26, 0, 23, 0, 41, 0, 31, 0, 6, 0, 41, 0 )
