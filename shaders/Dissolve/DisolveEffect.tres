[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://shaders/Dissolve/new_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
output_port_for_preview = 0
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0
operator = 8

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 12

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "uv"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_17;



void vertex() {
// Output:0

}

void fragment() {
// Input:26
	vec3 n_out26p0 = vec3(UV, 0.0);

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, n_out26p0.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// Input:14
	float n_out14p0 = TIME;

// ScalarOp:19
	float n_in19p1 = 2.00000;
	float n_out19p0 = n_out14p0 / n_in19p1;

// ScalarFunc:15
	float n_out15p0 = cos(n_out19p0);

// ScalarFunc:16
	float n_out16p0 = abs(n_out15p0);

// ScalarOp:25
	float n_in25p1 = 0.10000;
	float n_out25p0 = n_out16p0 - n_in25p1;

// ScalarOp:12
	float n_out12p0 = atan(dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)), n_out25p0);

// ScalarFunc:11
	float n_out11p0 = floor(n_out12p0);

// Output:0
	ALBEDO = n_out26p0;
	ALPHA = n_out11p0;
	ALPHA_SCISSOR = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -142, -442 )
nodes/fragment/0/position = Vector2( 1080, -300 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 460, -200 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 260, -240 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -200, 120 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( 140, 120 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( 360, 120 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( 80, -620 )
nodes/fragment/19/node = SubResource( 7 )
nodes/fragment/19/position = Vector2( -40, 100 )
nodes/fragment/25/node = SubResource( 8 )
nodes/fragment/25/position = Vector2( 20, -80 )
nodes/fragment/26/node = SubResource( 9 )
nodes/fragment/26/position = Vector2( 80, -760 )
nodes/fragment/connections = PoolIntArray( 12, 0, 11, 0, 15, 0, 16, 0, 14, 0, 19, 0, 17, 0, 12, 0, 16, 0, 0, 18, 19, 0, 15, 0, 16, 0, 25, 0, 25, 0, 12, 1, 26, 0, 0, 0, 26, 0, 17, 0, 11, 0, 0, 1 )
